<Project>

    <!-- 
      There are two approaches described for the default items:
      - Via AutoImport.props, described here: https://github.com/dotnet/designs/blob/main/accepted/2020/workloads/workload-resolvers.md#workload-props-files
      - Via this file according: https://github.com/dotnet/maui/blob/main/src/Workload/Microsoft.Uno.Sdk/Sdk/Microsoft.Uno.Sdk.DefaultItems.targets
      At the moment we are trying to use the MAUI approach
    -->

    <!--
    Enable the default xaml globs and nesting.
    -->
    <PropertyGroup>
        <EnableDefaultUnoItems Condition=" '$(EnableDefaultUnoItems)' == '' ">$(EnableDefaultItems)</EnableDefaultUnoItems>
        <EnableDefaultXamlItems Condition=" '$(EnableDefaultXamlItems)' == '' ">$(EnableDefaultUnoItems)</EnableDefaultXamlItems>
        <EnableDefaultEmbeddedResourceItems Condition=" '$(EnableDefaultEmbeddedResourceItems)' == '' ">$(EnableDefaultUnoItems)</EnableDefaultEmbeddedResourceItems>
    </PropertyGroup>
    
    <!--
    Set up some basic structuring.
    
    This file does two things:
        - Move all the .xaml.cs files under their .xaml files.
        - Remove the .xaml from the @(None) item group.
    
    These are in the workload so they can run when the NuGet packages are not yet restored.
    -->
    <ItemGroup Condition="'$(EnableDefaultItems)' == 'true' and '$(EnableDefaultXamlItems)' == 'true' and '$(EnableDefaultEmbeddedResourceItems)' == 'true'">
        <Compile Update="**\*.xaml$(DefaultLanguageSourceExtension)" DependentUpon="%(Filename)" SubType="Code" />
        <None Remove="**\*.xaml" Condition="'$(EnableDefaultNoneItems)' == 'true'" />
    </ItemGroup>

    <ItemGroup>
        <Content Include="$(ProjectDir)Assets\**" Condition="'$(UseUnoLibrary)' != 'true'" />
        <Content Include="$(ProjectDir)Resources\Assets\**" />
        <UpToDateCheckInput Include="$(ProjectDir)**\*.xaml" Exclude="$(ProjectDir)bin\**\*.xaml;$(ProjectDir)obj\**\*.xaml" />
        <PRIResource Include ="$(ProjectDir)**\*.resw" />
        <Page Include="$(ProjectDir)**\*.xaml" Exclude="$(ProjectDir)bin\**\*.xaml;$(ProjectDir)obj\**\*.xaml;$(ProjectDir)App.xaml;$(ProjectDir)Platforms\**\*.xaml"
              Condition="'$(UseUnoWindows)' != 'true'"
              XamlRuntime="WinUI" />
        <ApplicationDefinition Include="AppHead.xaml"
                               SubType="Designer"
                               XamlRuntime="WinUI"
                               Generator="MSBuild:Compile"
                               Link="AppHead.xaml"
                               Condition="Exists('AppHead.xaml') and '$(UseUnoWindows)' != 'true'" />
        <ApplicationDefinition Include="App.xaml"
                               SubType="Designer"
                               XamlRuntime="WinUI"
                               Generator="MSBuild:Compile"
                               Link="App.xaml"
                               Condition="Exists('App.xaml') and '$(UseUnoWindows)' != 'true'" />
        <Compile Update="AppHead.xaml.cs"
                 XamlRuntime="WinUI"
                 DependentUpon="AppHead.xaml"
                 Link="AppHead.xaml.cs"
                 Condition="Exists('AppHead.xaml.cs')" />
        <Compile Update="App.xaml.cs"
                 XamlRuntime="WinUI"
                 DependentUpon="App.xaml"
                 Link="App.xaml.cs"
                 Condition="Exists('App.xaml.cs')" />
        <UnoIcon Include="$(ProjectDir)Resources\Icons\iconapp.svg"
                 ForegroundScale="0.65"
                 Color="#00000000"
                 Condition="Exists('$(ProjectDir)Resources\Icons\iconapp.svg')" />
        <UnoIcon Update="$(ProjectDir)Resources/Icons/iconapp.svg"
                 ForegroundFile="$(ProjectDir)Resources/Icons/appconfig.svg"
                 Condition="Exists('$(ProjectDir)Resources/Icons/iconapp.svg') AND Exists('$(ProjectDir)Resources/Icons/appconfig.svg')" />
        <UnoSplashScreen
                Include="$(ProjectDir)Resources\Splash\splash_screen.svg"
                BaseSize="128,128"
                Color="#086AD1"
                Condition="Exists('$(ProjectDir)Resources\Splash\splash_screen.svg')" />
        <UnoIcon Include="$(ProjectDir)Icons\iconapp.svg"
                 ForegroundScale="0.65"
                 Color="#00000000"
                 Condition="Exists('$(ProjectDir)Icons\iconapp.svg')" />
        <UnoIcon Update="$(ProjectDir)Icons/iconapp.svg"
                 ForegroundFile="$(ProjectDir)Icons/appconfig.svg"
                 Condition="Exists('$(ProjectDir)Icons/iconapp.svg') AND Exists('$(ProjectDir)Icons/appconfig.svg')" />
        <UnoSplashScreen
                Include="$(ProjectDir)Splash\splash_screen.svg"
                BaseSize="128,128"
                Color="#086AD1"
                Condition="Exists('$(ProjectDir)Splash\splash_screen.svg')" />
        <UnoImage Include="$(ProjectDir)Assets\**\*.svg" Condition="'$(UseUnoLibrary)' != 'true'" Exclude="@(UnoIcon);@(UnoSplashScreen)" />
        <UnoImage Include="$(ProjectDir)Resources\**\*.svg" Exclude="@(UnoIcon);@(UnoSplashScreen)" />
        <Compile Update="**/*.xaml.cs">
            <DependentUpon>%(Filename)</DependentUpon>
        </Compile>
    </ItemGroup>

    <ItemGroup Condition="$(TargetFramework.Contains('-ios')) != true">
        <Compile Remove="**\*.ios.cs" />
        <None Include="**\*.ios.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
        <Compile Remove="**\ios\**\*.cs" />
        <None Include="**\ios\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>
    <ItemGroup Condition="$(TargetFramework.Contains('-macos')) != true">
        <Compile Remove="**\*.macos.cs" />
        <None Include="**\*.macos.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
        <Compile Remove="**\macos\**\*.cs" />
        <None Include="**\macos\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>
    <ItemGroup Condition="$(TargetFramework.Contains('-maccatalyst')) != true ">
        <Compile Remove="**\*.maccatalyst.cs" />
        <None Include="**\*.maccatalyst.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
        <Compile Remove="**\maccatalyst\**\*.cs" />
        <None Include="**\maccatalyst\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>
    <ItemGroup Condition="$(TargetFramework.Contains('-ios')) != true AND $(TargetFramework.Contains('-maccatalyst')) != true">
        <Compile Remove="**\*.macios.cs" />
        <None Include="**\*.macios.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
        <Compile Remove="**\macios\**\*.cs" />
        <None Include="**\macios\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>
    <ItemGroup Condition="$(TargetFramework.Contains('-android')) != true ">
        <Compile Remove="**\*.android.cs" />
        <None Include="**\*.android.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
        <Compile Remove="**\android\**\*.cs" />
        <None Include="**\android\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>
    <ItemGroup Condition="$(TargetFramework.Contains('-windows10')) != true ">
        <Compile Remove="**\*.windows.cs" />
        <None Include="**\*.windows.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
        <Compile Remove="**\windows\**\*.cs" />
        <None Include="**\windows\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>
    <ItemGroup Condition="$(TargetFramework.Contains('-tizen')) != true ">
        <Compile Remove="**\*.tizen.cs" />
        <None Include="**\*.tizen.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
        <Compile Remove="**\tizen\**\*.cs" />
        <None Include="**\tizen\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>
    <ItemGroup Condition="$(TargetFramework.Contains('-linux')) != true ">
        <Compile Remove="**\*.linux.cs" />
        <None Include="**\*.linux.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
        <Compile Remove="**\linux\**\*.cs" />
        <None Include="**\linux\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>
    <ItemGroup Condition="$(TargetFramework.Contains('-gtk')) != true ">
        <Compile Remove="**\*.gtk.cs" />
        <None Include="**\*.gtk.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
        <Compile Remove="**\gtk\**\*.cs" />
        <None Include="**\gtk\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>
    <ItemGroup Condition="$(TargetFramework.Contains('-windows7')) != true and !$(TargetFramework.EndsWith('-windows'))">
        <Compile Remove="**\*.wpf.cs" />
        <None Include="**\*.wpf.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
        <Compile Remove="**\wpf\**\*.cs" />
        <None Include="**\wpf\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>
    <ItemGroup Condition="$(TargetFramework.Contains('-webassembly')) != true ">
        <Compile Remove="**\*.webassembly.cs" />
        <None Include="**\*.webassembly.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
        <Compile Remove="**\webassembly\**\*.cs" />
        <None Include="**\webassembly\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>

    <Import Project="Uno.Sdk.DefaultItems.Mobile.targets" Condition=" '$(UseUnoMobile)' == 'true' " />
    <Import Project="Uno.Sdk.DefaultItems.Windows.targets" Condition=" '$(UseUnoWindows)' == 'true' " />
    <Import Project="Uno.Sdk.DefaultItems.WebAssembly.targets" Condition=" '$(UseUnoWebAssembly)' == 'true' " />
    <Import Project="Uno.Sdk.DefaultItems.Gtk.targets" Condition=" '$(UseUnoGtk)' == 'true' " />
    <Import Project="Uno.Sdk.DefaultItems.Wpf.targets" Condition=" '$(UseUnoWpf)' == 'true' " />
    <Import Project="Uno.Sdk.DefaultItems.Linux.targets" Condition=" '$(UseUnoLinux)' == 'true' " />
    
</Project>
