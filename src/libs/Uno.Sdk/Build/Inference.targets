<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <!--	<PropertyGroup Condition="'$(TargetFramework)' == 'net7.0-skia-gtk'">-->
    <!--		<TargetFrameworkIdentifier>.NETCoreApp</TargetFrameworkIdentifier>-->
    <!--		<TargetFrameworkVersion>v7.0</TargetFrameworkVersion>-->
    <!--		<TargetPlatformIdentifier>skia-gtk</TargetPlatformIdentifier>-->
    <!--		<TargetPlatformVersion>2.88.6</TargetPlatformVersion>-->
    <!--		<TargetPlatformSupported>true</TargetPlatformSupported>-->
    <!--		<TargetPlatformVersionSupported>true</TargetPlatformVersionSupported>-->
    <!--		<DisableStandardFrameworkResolution>true</DisableStandardFrameworkResolution>-->
    <!--		<AutoUnifyAssemblyReferences>true</AutoUnifyAssemblyReferences>-->
    <!--		<GenerateDependencyFile Condition=" '$(GenerateDependencyFile)' == '' ">true</GenerateDependencyFile>-->
    <!--		<IncludeFileVersionsInDependencyFile Condition="'$(IncludeFileVersionsInDependencyFile)' == ''">true</IncludeFileVersionsInDependencyFile>-->
    <!--		<TargetExt Condition="'$(TargetExt)' == ''">.dll</TargetExt>-->
    <!--		<CopyLocalRuntimeTargetAssets Condition="'$(CopyLocalRuntimeTargetAssets)' == ''">true</CopyLocalRuntimeTargetAssets>-->
    <!--		<CopyLocalLockFileAssemblies Condition="'$(CopyLocalLockFileAssemblies)' == ''">false</CopyLocalLockFileAssemblies>-->
    <!--		<EnableFrameworkPathOverride Condition="'$(EnableFrameworkPathOverride)' == ''">false</EnableFrameworkPathOverride>-->
    <!--	</PropertyGroup>-->

    <!--	<Target Name="_ChangeTargetFrameworkToCorrect"-->
    <!--			BeforeTargets="ResolvePackageAssets">-->
    <!--		<Message Importance="High" Text="Initial TargetFramework: $(TargetFramework)" />-->
    <!--		-->
    <!--		<PropertyGroup Condition="'$(TargetFramework)' == 'net7.0-skia-gtk'">-->
    <!--			<TargetFramework>net7.0</TargetFramework>-->
    <!--			<TargetFrameworkIdentifier>.NETCoreApp</TargetFrameworkIdentifier>-->
    <!--			<TargetFrameworkVersion>v7.0</TargetFrameworkVersion>-->
    <!--			<TargetPlatformIdentifier></TargetPlatformIdentifier>-->
    <!--			<TargetPlatformVersion></TargetPlatformVersion>-->
    <!--			<TargetPlatformSupported>true</TargetPlatformSupported>-->
    <!--			<TargetPlatformVersionSupported>true</TargetPlatformVersionSupported>-->
    <!--		</PropertyGroup>-->
    <!--		-->
    <!--		<Message Importance="High" Text="Fixed TargetFramework: $(TargetFramework)" />-->
    <!--		<Message Importance="High" Text="PackageReferences: @(PackageReference)" />-->
    <!--	</Target>-->
    
    <PropertyGroup>
        <!-- Convert 'TargetFramework' to lower case -->
        <TargetFramework>$(TargetFramework.ToLowerInvariant())</TargetFramework>
        <TargetFramework Condition="'$(TargetFramework)' == 'net7.0-skia-gtk'">net7.0</TargetFramework>
    </PropertyGroup>

    <!--
      Split 'TargetFramework' into short identifier, version and profile list
      For Example:
        net45 into 'net', '45'
        net40-client into 'net', '40', '+client+'
        portable45-net45+win8+wp8+wpa81 into 'portable', '45', '+net45+win8+wp8+wpa81+'
    -->
    <Choose>
        <When Condition="$(TargetFramework.Contains('-'))">
            <!-- Handle short framework ids with profiles -->
            <PropertyGroup>
                <_SdkShortFrameworkIdentifierWithVersion>$(TargetFramework.Split('-')[0])</_SdkShortFrameworkIdentifierWithVersion>
                <_SdkShortFrameworkIdentifier>$(_SdkShortFrameworkIdentifierWithVersion.TrimEnd('.0123456789'))</_SdkShortFrameworkIdentifier>
                <_SdkShortFrameworkVersion>$(_SdkShortFrameworkIdentifierWithVersion.Substring($(_SdkShortFrameworkIdentifier.Length)))</_SdkShortFrameworkVersion>
                <_SdkShortFrameworkProfile>$(TargetFramework.Split('-')[1])</_SdkShortFrameworkProfile>
                <_SdkShortFrameworkProfileCount>$(_SdkShortFrameworkProfile.Split('+').Length)</_SdkShortFrameworkProfileCount>
                <!-- Pre and post-pend the separator char + to the short-TFM list after counting so we can easily do a Contains() match -->
                <_SdkShortFrameworkProfile>+$(_SdkShortFrameworkProfile)+</_SdkShortFrameworkProfile>
            </PropertyGroup>
        </When>

        <Otherwise>
            <!-- Handle simple short framework ids -->
            <PropertyGroup>
                <_SdkShortFrameworkIdentifier>$(TargetFramework.TrimEnd('.0123456789'))</_SdkShortFrameworkIdentifier>
                <_SdkShortFrameworkVersion>$(TargetFramework.Substring($(_SdkShortFrameworkIdentifier.Length)))</_SdkShortFrameworkVersion>
            </PropertyGroup>
        </Otherwise>
    </Choose>

    <!-- Map short name to long name. See earlier comment for example of how to work with identifiers that are not recognized here -->
    <PropertyGroup>
        <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkProfile)' == '+webassembly+'">.NETCore</TargetFrameworkIdentifier>
        <TargetFrameworkIdentifier Condition="'$(_SdkShortFrameworkProfile)' == '+skia-gtk+'">.NETCore</TargetFrameworkIdentifier>
        <TargetFramework>net7.0</TargetFramework>
    </PropertyGroup>

    <Choose>
        <When Condition="'$(TargetFrameworkVersion)' == '' AND '$(_SdkShortFrameworkVersion)' != '' AND $(_SdkShortFrameworkVersion.Contains('.'))">
            <!-- Versions with dots are taken as is -->
            <PropertyGroup>
                <TargetFrameworkVersion>v$(_SdkShortFrameworkVersion)</TargetFrameworkVersion>
            </PropertyGroup>
        </When>

        <When Condition="'$(TargetFrameworkVersion)' == '' AND '$(_SdkShortFrameworkVersion)' != ''">
            <!-- Versions with no dots and up to 3 characters gets implicit dots between characters -->
            <PropertyGroup>
                <TargetFrameworkVersion Condition="$(_SdkShortFrameworkVersion.Length) == 1">v$(_SdkShortFrameworkVersion[0]).0</TargetFrameworkVersion>
                <TargetFrameworkVersion Condition="$(_SdkShortFrameworkVersion.Length) == 2">v$(_SdkShortFrameworkVersion[0]).$(_SdkShortFrameworkVersion[1])</TargetFrameworkVersion>
                <TargetFrameworkVersion Condition="$(_SdkShortFrameworkVersion.Length) == 3">v$(_SdkShortFrameworkVersion[0]).$(_SdkShortFrameworkVersion[1]).$(_SdkShortFrameworkVersion[2])</TargetFrameworkVersion>
            </PropertyGroup>
        </When>

    </Choose>

    <PropertyGroup>
        <_SdkTargetFrameworkVersionWithoutV>$(TargetFrameworkVersion)</_SdkTargetFrameworkVersionWithoutV>
        <_SdkTargetFrameworkVersionWithoutV Condition="$(TargetFrameworkVersion.StartsWith('v'))">$(TargetFrameworkVersion.Substring(1))</_SdkTargetFrameworkVersionWithoutV>
    </PropertyGroup>
    
    <!-- Add conditional compilation symbols for the target framework and one with version -->
    <PropertyGroup Condition="'$(DisableImplicitFrameworkDefines)' != 'true'">
        <ImplicitFrameworkIdentifierDefine>$(TargetFrameworkIdentifier.TrimStart('.').Replace('.','_').ToUpperInvariant())</ImplicitFrameworkIdentifierDefine>
        <ImplicitFrameworkDefine>$(TargetFramework.Replace('.','_').Replace('-','_').Replace('+','_').ToUpperInvariant())</ImplicitFrameworkDefine>
        <_SdkRuntimeIdentifierDefine Condition="'$(RuntimeIdentifier)' != ''">$(RuntimeIdentifier.Replace('.','_').Replace('-','_').ToUpperInvariant())</_SdkRuntimeIdentifierDefine>
    </PropertyGroup>

    <PropertyGroup Label="Build.Output">
        <Configuration Condition="'$(Configuration)'==''">Debug</Configuration>
        <Platform Condition="'$(Platform)'==''">AnyCPU</Platform>
        <PlatformName Condition="'$(PlatformName)' == ''">$(Platform)</PlatformName>

        <BaseOutputPath Condition="'$(BaseOutputPath)' == ''">bin\</BaseOutputPath>
        <BaseOutputPath Condition="!HasTrailingSlash('$(BaseOutputPath)')">$(BaseOutputPath)\</BaseOutputPath>
        <OutputPath Condition="'$(OutputPath)' == '' and '$(PlatformName)' == 'AnyCPU'">$(BaseOutputPath)$(Configuration)\</OutputPath>
        <OutputPath Condition="'$(OutputPath)' == '' and '$(PlatformName)' != 'AnyCPU'">$(BaseOutputPath)$(PlatformName)\$(Configuration)\</OutputPath>
        <OutputPath Condition="!HasTrailingSlash('$(OutputPath)')">$(OutputPath)\</OutputPath>

        <BaseIntermediateOutputPath Condition="'$(BaseIntermediateOutputPath)' == ''">obj\</BaseIntermediateOutputPath>
        <BaseIntermediateOutputPath Condition="!HasTrailingSlash('$(BaseIntermediateOutputPath)')">$(BaseIntermediateOutputPath)\</BaseIntermediateOutputPath>
        <IntermediateOutputPath Condition=" $(IntermediateOutputPath) == '' and '$(PlatformName)' == 'AnyCPU' ">$(BaseIntermediateOutputPath)$(Configuration)\</IntermediateOutputPath>
        <IntermediateOutputPath Condition=" $(IntermediateOutputPath) == '' and '$(PlatformName)' != 'AnyCPU' ">$(BaseIntermediateOutputPath)$(PlatformName)\$(Configuration)\</IntermediateOutputPath>
        <IntermediateOutputPath Condition="!HasTrailingSlash('$(IntermediateOutputPath)')">$(IntermediateOutputPath)\</IntermediateOutputPath>
    </PropertyGroup>
    
</Project>